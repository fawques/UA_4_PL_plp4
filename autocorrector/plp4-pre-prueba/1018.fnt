class Primera{
 private Primera oculto;

 public double tribonacci(double x)
 {
  if ((x==1)|(x==2))
   return 1;
  if (x==3)
   return 2;
  return tribonacci(x-1)+tribonacci(x-2)+tribonacci(x-3);
 }

 public double tetranacci(double x)
 {
  if (x==0)
   return 0;
  if ((x==1)|(x==2))
   return 1;
  if (x==3)
   return 2;
  return tetranacci(x-1)+tetranacci(x-2)+tetranacci(x-3)+tetranacci(x-4);
 }

 public double geotribonacci(double x)
 {
  if ((x==1)|(x==2))
   return 1;
  if (x==3)
   return 2;
  return geotribonacci(x-1)*geotribonacci(x-2)*geotribonacci(x-3);
 }

 public double geofibonacci(double x)
 {
  if ((x==0)|(x==1))
   return 1;
  return geofibonacci(x-1)*geofibonacci(x-2)+1;
 }

 public double transfibonacci(double x)
 {
  if (x<=1)
   return 1;
  oculto=new Primera();
  return oculto.transfibonacci(oculto.transfibonacci(x-1)+oculto.transfibonacci(x-2)-(oculto.transfibonacci(x-2)+oculto.transfibonacci(x-3))-1);
 }

}

class Principal{
private double a[,],b[];

public int Principal()
{
 a=new double[8,10];b=new double[10]; 
}
public static void Main()
{
 int i,k;
 Primera p;
 Principal basico;


 basico=new Principal();
 
 i=(-9);
 for(int ii=i to 0 step 1)
 {
  basico.b[(-i)]=i;
  i=ii;
 }
 p=new Primera();
 for(int i=0 to 9 step 1)
 {
  basico.a[0,basico.b[i]*(-1)]=i;
  basico.a[1,basico.b[i]*(-1)]=1;
  basico.a[2,basico.b[i]*(-1)]=p.tribonacci(i+1);
  basico.a[3,basico.b[i]*(-1)]=p.tetranacci(i);
  basico.a[4,basico.b[i]*(-1)]=p.geotribonacci(i+1);
  basico.a[5,basico.b[i]*(-1)]=p.geofibonacci(i);
  basico.a[6,basico.b[i]*(-1)]=p.transfibonacci(i);
  basico.a[7,basico.b[i]*(-1)]=0;
 }
 for(int i=0 to 9 step 1)
 {
   for(int j=0 to 7 step 1)
   {
    if (j==0) 
      System.Console.WriteLine(basico.a[j,basico.b[i]*(-1)]);
    else if (j==1)
     System.Console.WriteLine(True);
    else if (j==7)
     System.Console.WriteLine(False);
    else
     System.Console.WriteLine(basico.a[j,basico.b[i]*(-1)]);
   }
 }
}


}