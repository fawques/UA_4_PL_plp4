
class engloba{
  private int a,b;

public int func()
{
 a=7;
 b=6;

 System.Console.WriteLine(((a)));
 System.Console.WriteLine(b);
 System.Console.WriteLine ((-1));
 System.Console.WriteLine (2.0);
 System.Console.WriteLine (True);
 System.Console.WriteLine (False);

 if (a < 10)
  for(int a=a to 7 step -1)
    for(int b=b to 1 step -1)
        System.Console.WriteLine (a*b);
}
}

class Dos{
public int A[]; 
public int N,n,h,i,j,x,p,maxi,hmaxi;

public int  Inorden()
{ 
  A=new int [4097];
  maxi = 4096;
  hmaxi = 12;
  i=1;
  for(int ii=i to maxi step 1)
  {
    A[i]=(-1);
    i=ii;
  }
  System.Console.WriteLine(True); 
  N.int.Parse(System.Console.ReadLine());
  j=1; 
  bool cabe;
  for(int jj=j to N step 1)
  {
    x.int.Parse(System.Console.ReadLine());
    n=0; 
    i=1; 
    cabe=False;
    if (x>=0) 
     while(n<hmaxi & !cabe) 
     {
      if (A[i]!=(-1)) 
      {
        if (x<A[i])
          i=2*i; 
        else
          i=2*i+1; 
        n=n+1;
      } 
      else 
        cabe=True;
     } 

    if (cabe)
     A[i]=x; 
    System.Console.WriteLine(cabe); 
    j=jj;
  }
}

public bool Mostrar()
{ 
  System.Console.WriteLine(True); 
  int Pila[]; 
  bool visitado[]; 
  int tope,aux;
  tope = 0;
  Pila=new int [4097];
  visitado=new bool [4097]; 
  i=1;
  for(int ii=i to maxi step 1)
  {
    visitado[i]=False;
    i=ii;
  } 
  if (A[1]!=(-1)) 
  {
    tope=tope+1;  
    Pila[tope] = 1;
  }
  if (tope>0) 
   while(tope>0) 
   { 
    aux = Pila[tope]; 
    tope = tope-1;
    if (visitado[aux]) 
     {
      System.Console.WriteLine(A[aux]); 
      if (aux < 2048) 
        if (A[aux*2+1]!=(-1))
         { 
          tope = tope+1;
          Pila[tope] = aux*2+1;
         }
     }
    else 
     {
      visitado[aux]=True; 
      tope = tope+1;
      Pila[tope] = aux; 
      
      if (aux < 2048)  
        if (A[aux*2]!=(-1)) {tope = tope+1;
          Pila[tope] = aux*2;
          }
    }
  } 
}

public static void Main()
{
  engloba func;
  func=new engloba();
  func.func();
  func.bool.Parse(System.Console.ReadLine());
}
}

