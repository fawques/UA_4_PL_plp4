PRE-CORRECTOR PLP3
==================

(este archivo no lleva acentos) 

Este pre-corrector viene precompilado para sistemas Linux. el sistema debe
tener instalado Java 1.7 o superior, incluyendo el entorno de desarrollo
(JDK), aunque funcionara probablemente con Java 1.6. Mira al final si quieres 
ejecutarlo en otros sistemas. 

Para ejecutar este pre-corrector:

$ corrector.sh <directorio>

donde <directorio> es una carpeta que contiene el codigo fuente de la practica
(archivo plp3.g, plp3.java y demas ficheros .java necesarios),

Los ficheros de prueba se encuentran en el directorio plp3-pre-prueba. Cada
prueba tiene un numero (por ejemplo 1000) y consta de varios ficheros:

  1000.fnt : Codigo fuente en Pelele. Es el fichero a traducir.
  1000.ent : Datos de entrada para el programa 1000.fnt. Contiene un dato por linea.
  1000.sal : Salida estandar resultado de ejecutar el programa 1000.fnt.
             Estara vacio si el codigo fuente (1000.fnt) contiene errores.
  1000.err : Salida de error: contiene mensajes de error producidos durante
             el proceso de traduccion a CIL. Estara vacio si el codigo fuente no
             contiene errores.

En <directorio> se generan:

  - Los ficheros de codigo java generados por ANTLR
  - Los ficheros .class resultado de compilar los ficheros java en <directorio>
  - Al ejecutar la practica con un fichero de codigo fuente, por ejemplo,
    1000.fnt, se generan los siguientes archivos en <directorio>

    - 1000.err.tmp : mensajes de error generados por tu traductor.  
    - 1000.il.tmp  : codigo CIL generado por tu traductor. Debe estar vacio
                     si el codigo fuente (1000.fnt) contiene errores.  
    - 1000.tmp.exe : fichero ejecutable en la plataforma 'mono'. Contiene el
                     codigo CIL compilado, listo para ser ejecutado. Si el codigo CIL no ha
                     sido generado, debido a errores en el codigo fuente
                     Pelele, o por errores en el propio codigo CIL generado, este fichero no se
                     genera.
    - 1000.sal.tmp : salida estandar producida al compilar y ejecutar el codigo CIL
                     generado por tu traductor.

El corrector evalua la practica comparando la salida estandar y de error
esperada (p. ej., 1000.sal y 1000.err) con la salida estandar y de error
generada por tu traductor (1000.sal.tmp y 1000.err.tmp). El codigo CIL
generado por tu traductor no se evalua.

Ejecutar en sistemas no linux
-----------------------------

Necesitas tener instalado gcc, ademas de lo indicado al principio de este
fichero.  Ejecuta

$ gcc -o timer timer.c

Ya puedes usar el corrector.
