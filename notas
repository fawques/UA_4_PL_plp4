· A.Sint en orden de la tabla

· prefijo a variables y function -> atributo heredado

· ambito
    S -> tSA = new tablaSimbolos(null)
    UnVsp -> function ... tSA = new tablaSimbolos(tSA);
                            tSA = tSA.pop();

· tablaSimbolos con nombre de vble, con modulo_nombre, tipo(enteros, reales y funciones y ...)

·   2+3.5 => itor(2) +r 3.5
    3.5+2 => 3.5 +r itor(2)
    3.5+2.5 => 3.5 +r 2.5
    2+3 => 2 +i 3
        // hay que sintetizar el tipo en Factor...
    Expr puede ser real o entero
    E puede ser tambien booleano -> hay que poner un if en la regla de if o de while para comprobar que recibe un bool

· TRAMPA para hacer la herencia por la derecha (var a,b,c,a:integer)
    Añades los símbolos conforme aparecen a la tabla de símbolos con tipo NOTIPO y además vas guardándolos en una lista (para comprobar si se repiten)
    Una vez llegas al tipo, recorres la lista cambiando el tipo en la tabla de símbolos al que acabas de encontrar.

· Al traducir Term, como tiene dos cosas, tiene que pasar dos atributos heredados a Expr': tipo y traduccion

· 2 + 3 + 5 + 8.5 + 9 + 6 + 7 + 8 ==> itor(2 +i 3 +i 5) +r 8.5 +r itor(9) +r itor(6) +r itor(7) +r itor(8)
